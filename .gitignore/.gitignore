package Lab3;



import java.util.Scanner;
import java.util.concurrent.ThreadLocalRandom;

public class Execute {
	private static long startTime, runTime;
	

	public static void main(String[] args) {
		int choice = 0;
		Scanner scanner = new Scanner(System.in);

		while(choice < 1 || choice > 4){
			System.out.print("Size of array:\n"
					+ "1. 1000\n"
					+ "2. 10000\n"
					+ "3. 100000\n"
					+ "4. 1000000\n"
					+ "Choice: ");
			try{
				choice = scanner.nextInt();
			}catch (Exception e){
				e.printStackTrace();
			}
			scanner.nextLine();
		}

		int[] array = new int[(int)Math.pow(10, 2+choice)];
		
		choice = 0;
		while(choice < 1 || choice > 3){
			System.out.print("Data:\n"
					+ "1. Randomly generated datasets of integers in the range [1 ... n].\n"
					+ "2. Integers 1, 2, ..., n sorted in ascending order.\n"
					+ "3. Integers n, nâˆ’1, ...,1 sorted in descending order.\n"
					+ "Choice: ");
			try{
				choice = scanner.nextInt();
			}catch (Exception e){
				e.printStackTrace();
			}
		}
		switch (choice) {
		case 1:
			for(int i = 0; i < array.length; i++){
				array[i] = ThreadLocalRandom.current().nextInt(1, array.length+1);
			}
			break;
		case 2:
			for(int i = 0; i < array.length; i++){
				array[i] = i+1;
			}
			break;
		case 3:
			for(int i = 0; i < array.length; i++){
				array[i] = array.length - i;
			}
			break;
		default:
			System.out.println("Invalid input");
			break;
		}
		//printArray(array); // To see the array
		
		choice = 0;
		while(choice < 1 || choice > 2){
			System.out.print("1. MergeSort\n"
					+ "2. Insertion Sort\n"
					+ "Choice: ");
			try{
				choice = scanner.nextInt();
			}catch (Exception e){
				e.printStackTrace();
			}
			scanner.nextLine();
		}
		switch(choice){
		case 1:
			startTime = System.nanoTime();
			MergeSort.mergeSort(array);
			runTime = System.nanoTime() - startTime;
			//printArray(array);
			System.out.println("Key Comparison: " + MergeSort.count
					+ "\nRuntime: " + runTime + "ns");
			break;
		case 2:
			startTime = System.nanoTime();
			InsertionSort.insertionSort(array);
			runTime = System.nanoTime() - startTime;
			//printArray(array);
			System.out.println("Key Comparison: " + InsertionSort.count
					+ "\nRuntime: " + runTime + "ns");
			break;
		default:
			break;
		}
		
		scanner.close();
	}
	
	public static void printArray(int[] array){
		for(int i = 0; i < array.length; i++){
			System.out.println(Integer.toString(array[i]));
		}
	}
}
